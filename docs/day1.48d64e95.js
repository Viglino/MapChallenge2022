function e(e,t,r,s){Object.defineProperty(e,t,{get:r,set:s,enumerable:!0,configurable:!0})}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},s={},i=t.parcelRequirecc54;null==i&&((i=function(e){if(e in r)return r[e].exports;if(e in s){var t=s[e];delete s[e];var i={id:e,exports:{}};return r[e]=i,t.call(i.exports,i,i.exports),i.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){s[e]=t},t.parcelRequirecc54=i),i.register("kPMpK",(function(t,r){e(t.exports,"default",(()=>G));var s=i("iGyOD"),n=i("6pyIt"),o=i("k8QYM"),a=i("hvEnP"),l=i("7TB1l"),u=i("ljDIj"),c=i("dEQmT"),h=i("j2K3b"),d=i("cgPpQ"),g=i("eJ4LZ"),f=i("gzr8q"),m=i("kKEgb"),p=i("9z1G1");class y extends o.default{constructor(e){e=e||{},super(),this.dataProjection=(0,f.get)(e.dataProjection?e.dataProjection:"EPSG:4326"),e.featureProjection&&(this.defaultFeatureProjection=(0,f.get)(e.featureProjection)),this.geometryName_=e.geometryName,this.extractGeometryName_=e.extractGeometryName,this.supportedMediaTypes=["application/geo+json","application/vnd.geo+json"]}readFeatureFromObject(e,t){let r=null;r="Feature"===e.type?e:{type:"Feature",geometry:e,properties:null};const i=_(r.geometry,t),n=new(0,s.default);return this.geometryName_?n.setGeometryName(this.geometryName_):this.extractGeometryName_&&n.setGeometryName(r.geometry_name),n.setGeometry(i),"id"in r&&n.setId(r.id),r.properties&&n.setProperties(r.properties,!0),n}readFeaturesFromObject(e,t){let r=null;if("FeatureCollection"===e.type){r=[];const s=e.features;for(let e=0,i=s.length;e<i;++e)r.push(this.readFeatureFromObject(s[e],t))}else r=[this.readFeatureFromObject(e,t)];return r}readGeometryFromObject(e,t){return _(e,t)}readProjectionFromObject(e){const t=e.crs;let r;return t?"name"==t.type?r=(0,f.get)(t.properties.name):"EPSG"===t.type?r=(0,f.get)("EPSG:"+t.properties.code):(0,g.assert)(!1,36):r=this.dataProjection,r}writeFeatureObject(e,t){t=this.adaptOptions(t);const r={type:"Feature",geometry:null,properties:null},s=e.getId();if(void 0!==s&&(r.id=s),!e.hasProperties())return r;const i=e.getProperties(),n=e.getGeometry();return n&&(r.geometry=b(n,t),delete i[e.getGeometryName()]),(0,m.isEmpty)(i)||(r.properties=i),r}writeFeaturesObject(e,t){t=this.adaptOptions(t);const r=[];for(let s=0,i=e.length;s<i;++s)r.push(this.writeFeatureObject(e[s],t));return{type:"FeatureCollection",features:r}}writeGeometryObject(e,t){return b(e,this.adaptOptions(t))}}function _(e,t){if(!e)return null;let r;switch(e.type){case"Point":r=function(e){return new(0,h.default)(e.coordinates)}(e);break;case"LineString":r=function(e){return new(0,a.default)(e.coordinates)}(e);break;case"Polygon":r=function(e){return new(0,d.default)(e.coordinates)}(e);break;case"MultiPoint":r=function(e){return new(0,u.default)(e.coordinates)}(e);break;case"MultiLineString":r=function(e){return new(0,l.default)(e.coordinates)}(e);break;case"MultiPolygon":r=function(e){return new(0,c.default)(e.coordinates)}(e);break;case"GeometryCollection":r=function(e,t){const r=e.geometries.map((function(e){return _(e,t)}));return new(0,n.default)(r)}(e);break;default:throw new Error("Unsupported GeoJSON type: "+e.type)}return(0,p.transformGeometryWithOptions)(r,!1,t)}function b(e,t){const r=(e=(0,p.transformGeometryWithOptions)(e,!0,t)).getType();let s;switch(r){case"Point":s=function(e,t){return{type:"Point",coordinates:e.getCoordinates()}}(e);break;case"LineString":s=function(e,t){return{type:"LineString",coordinates:e.getCoordinates()}}(e);break;case"Polygon":s=function(e,t){let r;t&&(r=t.rightHanded);return{type:"Polygon",coordinates:e.getCoordinates(r)}}(e,t);break;case"MultiPoint":s=function(e,t){return{type:"MultiPoint",coordinates:e.getCoordinates()}}(e);break;case"MultiLineString":s=function(e,t){return{type:"MultiLineString",coordinates:e.getCoordinates()}}(e);break;case"MultiPolygon":s=function(e,t){let r;t&&(r=t.rightHanded);return{type:"MultiPolygon",coordinates:e.getCoordinates(r)}}(e,t);break;case"GeometryCollection":s=function(e,t){delete(t=Object.assign({},t)).featureProjection;return{type:"GeometryCollection",geometries:e.getGeometriesArray().map((function(e){return b(e,t)}))}}(e,t);break;case"Circle":s={type:"GeometryCollection",geometries:[]};break;default:throw new Error("Unsupported geometry type: "+r)}return s}var G=y})),i.register("6pyIt",(function(t,r){e(t.exports,"default",(()=>c));var s=i("cw4dl"),n=i("fvrVu"),o=i("jZquI"),a=i("bsgMw");class l extends n.default{constructor(e){super(),this.geometries_=e||null,this.changeEventsKeys_=[],this.listenGeometriesChange_()}unlistenGeometriesChange_(){this.changeEventsKeys_.forEach(a.unlistenByKey),this.changeEventsKeys_.length=0}listenGeometriesChange_(){if(this.geometries_)for(let e=0,t=this.geometries_.length;e<t;++e)this.changeEventsKeys_.push((0,a.listen)(this.geometries_[e],s.default.CHANGE,this.changed,this))}clone(){const e=new l(null);return e.setGeometries(this.geometries_),e.applyProperties(this),e}closestPointXY(e,t,r,s){if(s<(0,o.closestSquaredDistanceXY)(this.getExtent(),e,t))return s;const i=this.geometries_;for(let n=0,o=i.length;n<o;++n)s=i[n].closestPointXY(e,t,r,s);return s}containsXY(e,t){const r=this.geometries_;for(let s=0,i=r.length;s<i;++s)if(r[s].containsXY(e,t))return!0;return!1}computeExtent(e){(0,o.createOrUpdateEmpty)(e);const t=this.geometries_;for(let r=0,s=t.length;r<s;++r)(0,o.extend)(e,t[r].getExtent());return e}getGeometries(){return u(this.geometries_)}getGeometriesArray(){return this.geometries_}getGeometriesArrayRecursive(){let e=[];const t=this.geometries_;for(let r=0,s=t.length;r<s;++r)t[r].getType()===this.getType()?e=e.concat(t[r].getGeometriesArrayRecursive()):e.push(t[r]);return e}getSimplifiedGeometry(e){if(this.simplifiedGeometryRevision!==this.getRevision()&&(this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),e<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&e<this.simplifiedGeometryMaxMinSquaredTolerance)return this;const t=[],r=this.geometries_;let s=!1;for(let i=0,n=r.length;i<n;++i){const n=r[i],o=n.getSimplifiedGeometry(e);t.push(o),o!==n&&(s=!0)}if(s){const e=new l(null);return e.setGeometriesArray(t),e}return this.simplifiedGeometryMaxMinSquaredTolerance=e,this}getType(){return"GeometryCollection"}intersectsExtent(e){const t=this.geometries_;for(let r=0,s=t.length;r<s;++r)if(t[r].intersectsExtent(e))return!0;return!1}isEmpty(){return 0===this.geometries_.length}rotate(e,t){const r=this.geometries_;for(let s=0,i=r.length;s<i;++s)r[s].rotate(e,t);this.changed()}scale(e,t,r){r||(r=(0,o.getCenter)(this.getExtent()));const s=this.geometries_;for(let i=0,n=s.length;i<n;++i)s[i].scale(e,t,r);this.changed()}setGeometries(e){this.setGeometriesArray(u(e))}setGeometriesArray(e){this.unlistenGeometriesChange_(),this.geometries_=e,this.listenGeometriesChange_(),this.changed()}applyTransform(e){const t=this.geometries_;for(let r=0,s=t.length;r<s;++r)t[r].applyTransform(e);this.changed()}translate(e,t){const r=this.geometries_;for(let s=0,i=r.length;s<i;++s)r[s].translate(e,t);this.changed()}disposeInternal(){this.unlistenGeometriesChange_(),super.disposeInternal()}}function u(e){const t=[];for(let r=0,s=e.length;r<s;++r)t.push(e[r].clone());return t}var c=l})),i.register("k8QYM",(function(t,r){e(t.exports,"default",(()=>l));var s=i("9z1G1"),n=i("lVQul");class o extends s.default{constructor(){super()}getType(){return"json"}readFeature(e,t){return this.readFeatureFromObject(a(e),this.getReadOptions(e,t))}readFeatures(e,t){return this.readFeaturesFromObject(a(e),this.getReadOptions(e,t))}readFeatureFromObject(e,t){return(0,n.abstract)()}readFeaturesFromObject(e,t){return(0,n.abstract)()}readGeometry(e,t){return this.readGeometryFromObject(a(e),this.getReadOptions(e,t))}readGeometryFromObject(e,t){return(0,n.abstract)()}readProjection(e){return this.readProjectionFromObject(a(e))}readProjectionFromObject(e){return(0,n.abstract)()}writeFeature(e,t){return JSON.stringify(this.writeFeatureObject(e,t))}writeFeatureObject(e,t){return(0,n.abstract)()}writeFeatures(e,t){return JSON.stringify(this.writeFeaturesObject(e,t))}writeFeaturesObject(e,t){return(0,n.abstract)()}writeGeometry(e,t){return JSON.stringify(this.writeGeometryObject(e,t))}writeGeometryObject(e,t){return(0,n.abstract)()}}function a(e){if("string"==typeof e){const t=JSON.parse(e);return t||null}return null!==e?e:null}var l=o})),i.register("7TB1l",(function(t,r){e(t.exports,"default",(()=>m));var s=i("hvEnP"),n=i("63y7W"),o=i("96blb"),a=i("jZquI"),l=i("ee3b9"),u=i("exEDy"),c=i("kBSVF"),h=i("iTdJV"),d=i("1fqgz"),g=i("4NB4B");class f extends n.default{constructor(e,t,r){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(e[0]))this.setCoordinates(e,t);else if(void 0!==t&&r)this.setFlatCoordinates(t,e),this.ends_=r;else{let t=this.getLayout();const r=e,s=[],i=[];for(let e=0,n=r.length;e<n;++e){const n=r[e];0===e&&(t=n.getLayout()),(0,c.extend)(s,n.getFlatCoordinates()),i.push(s.length)}this.setFlatCoordinates(t,s),this.ends_=i}}appendLineString(e){this.flatCoordinates?(0,c.extend)(this.flatCoordinates,e.getFlatCoordinates().slice()):this.flatCoordinates=e.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const e=new f(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return e.applyProperties(this),e}closestPointXY(e,t,r,s){return s<(0,a.closestSquaredDistanceXY)(this.getExtent(),e,t)?s:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,o.arrayMaxSquaredDelta)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,o.assignClosestArrayPoint)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,e,t,r,s))}getCoordinateAtM(e,t,r){return"XYM"!=this.layout&&"XYZM"!=this.layout||0===this.flatCoordinates.length?null:(t=void 0!==t&&t,r=void 0!==r&&r,(0,d.lineStringsCoordinateAtM)(this.flatCoordinates,0,this.ends_,this.stride,e,t,r))}getCoordinates(){return(0,h.inflateCoordinatesArray)(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(e){return e<0||this.ends_.length<=e?null:new(0,s.default)(this.flatCoordinates.slice(0===e?0:this.ends_[e-1],this.ends_[e]),this.layout)}getLineStrings(){const e=this.flatCoordinates,t=this.ends_,r=this.layout,i=[];let n=0;for(let o=0,a=t.length;o<a;++o){const a=t[o],l=new(0,s.default)(e.slice(n,a),r);i.push(l),n=a}return i}getFlatMidpoints(){const e=[],t=this.flatCoordinates;let r=0;const s=this.ends_,i=this.stride;for(let n=0,o=s.length;n<o;++n){const o=s[n],a=(0,d.interpolatePoint)(t,r,o,i,.5);(0,c.extend)(e,a),r=o}return e}getSimplifiedGeometryInternal(e){const t=[],r=[];return t.length=(0,u.douglasPeuckerArray)(this.flatCoordinates,0,this.ends_,this.stride,e,t,0,r),new f(t,"XY",r)}getType(){return"MultiLineString"}intersectsExtent(e){return(0,g.intersectsLineStringArray)(this.flatCoordinates,0,this.ends_,this.stride,e)}setCoordinates(e,t){this.setLayout(t,e,2),this.flatCoordinates||(this.flatCoordinates=[]);const r=(0,l.deflateCoordinatesArray)(this.flatCoordinates,0,e,this.stride,this.ends_);this.flatCoordinates.length=0===r.length?0:r[r.length-1],this.changed()}}var m=f}));