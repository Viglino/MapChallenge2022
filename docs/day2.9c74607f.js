function t(t,e,r,n){Object.defineProperty(t,e,{get:r,set:n,enumerable:!0,configurable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},n={},o=e.parcelRequirecc54;null==o&&((o=function(t){if(t in r)return r[t].exports;if(t in n){var e=n[t];delete n[t];var o={id:t,exports:{}};return r[t]=o,e.call(o.exports,o,o.exports),o.exports}var i=new Error("Cannot find module '"+t+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(t,e){n[t]=e},e.parcelRequirecc54=o),o.register("23ytq",(function(e,r){t(e.exports,"ol_coordinate_dist2d",(()=>h)),t(e.exports,"ol_coordinate_equal",(()=>c));var n,i=o("hvEnP"),s=(o("fYB0A"),o("7TB1l")),a=(o("ljDIj"),o("dEQmT")),u=(o("j2K3b"),o("cgPpQ")),l=o("iTxNH"),f=o("jZquI"),h=(f=o("jZquI"),function(t,e){var r=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(r*r+n*n)}),c=function(t,e){return t[0]==e[0]&&t[1]==e[1]};!function(){function t(t,e){var r;for(let n=t.length-1;n>0;n--)(t[n][0]>e&&t[n-1][0]<e||t[n][0]<e&&t[n-1][0]>e)&&(r=[e,(e-t[n][0])/(t[n-1][0]-t[n][0])*(t[n-1][1]-t[n][1])+t[n][1]],t.splice(n,0,r))}function e(t,e){var r;for(let n=t.length-1;n>0;n--)(t[n][1]>e&&t[n-1][1]<e||t[n][1]<e&&t[n-1][1]>e)&&(r=[(e-t[n][1])/(t[n-1][1]-t[n][1])*(t[n-1][0]-t[n][0])+t[n][0],e],t.splice(n,0,r))}n=function(r,n){var o="Polygon"===n.getType();if(!o&&"MultiPolygon"!==n.getType())return null;var i=n.getCoordinates();return o&&(i=[i]),i.forEach((function(n){n.forEach((function(n){t(n,r[0]),t(n,r[2]),e(n,r[1]),e(n,r[3])}))})),i.forEach((function(t){t.forEach((function(t){t.forEach((function(t){t[0]<r[0]?t[0]=r[0]:t[0]>r[2]&&(t[0]=r[2]),t[1]<r[1]?t[1]=r[1]:t[1]>r[3]&&(t[1]=r[3])}))}))})),o?new(0,u.default)(i[0]):new(0,a.default)(i)}}();var d=function(t,e,r,n){var o=[];!1!==n&&o.push(t);var i=h(t,e);if(i){var s=Math.round(i/r);if(s>1)for(var a=(e[0]-t[0])/s,u=(e[1]-t[1])/s,l=1;l<s;l++)o.push([t[0]+a*l,t[1]+u*l])}return o.push(e),o};i.default.prototype.sampleAt=function(t){for(var e=this.getCoordinates(),r=[],n=1;n<e.length;n++)r=r.concat(d(e[n-1],e[n],t,1===n));return new(0,i.default)(r)},s.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),r=[];return e.forEach((function(e){for(var n=[],o=1;o<e.length;o++)n=n.concat(d(e[o-1],e[o],t,1===o));r.push(n)})),new(0,s.default)(r)},u.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),r=[];return e.forEach((function(e){for(var n=[],o=1;o<e.length;o++)n=n.concat(d(e[o-1],e[o],t,1===o));r.push(n)})),new(0,u.default)(r)},a.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),r=[];return e.forEach((function(e){var n=[];r.push(n),e.forEach((function(e){for(var r=[],o=1;o<e.length;o++)r=r.concat(d(e[o-1],e[o],t,1===o));n.push(r)}))})),new(0,a.default)(r)},l.default.prototype.intersection=function(t,e){if(t.sampleAt){var r=(0,f.buffer)(this.getCenter().concat(this.getCenter()),this.getRadius());t=(t=n(r,t)).simplify(e);var o=this.getCenter(),i=this.getRadius(),s=t.sampleAt(e).getCoordinates();switch(t.getType()){case"Polygon":s=[s];case"MultiPolygon":var l=!1,c=[];return s.forEach((function(t){var e=[];c.push(e),t.forEach((function(t){var r=[];e.push(r),t.forEach((function(t){var e=h(o,t);e>i?(l=!0,r.push([o[0]+i/e*(t[0]-o[0]),o[1]+i/e*(t[1]-o[1])])):r.push(t)}))}))})),l?"Polygon"===t.getType()?new(0,u.default)(c[0]):new(0,a.default)(c):t}}else console.warn("[ol/geom/Circle~intersection] Unsupported geometry type: "+t.getType());return t}})),o.register("iTxNH",(function(e,r){t(e.exports,"default",(()=>l));var n=o("63y7W"),i=o("jZquI"),s=o("ee3b9"),a=o("bsQCi");class u extends n.default{constructor(t,e,r){super(),void 0!==r&&void 0===e?this.setFlatCoordinates(r,t):(e=e||0,this.setCenterAndRadius(t,e,r))}clone(){const t=new u(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t}closestPointXY(t,e,r,n){const o=this.flatCoordinates,i=t-o[0],s=e-o[1],a=i*i+s*s;if(a<n){if(0===a)for(let t=0;t<this.stride;++t)r[t]=o[t];else{const t=this.getRadius()/Math.sqrt(a);r[0]=o[0]+t*i,r[1]=o[1]+t*s;for(let t=2;t<this.stride;++t)r[t]=o[t]}return r.length=this.stride,a}return n}containsXY(t,e){const r=this.flatCoordinates,n=t-r[0],o=e-r[1];return n*n+o*o<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(t){const e=this.flatCoordinates,r=e[this.stride]-e[0];return(0,i.createOrUpdate)(e[0]-r,e[1]-r,e[0]+r,e[1]+r,t)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e}getType(){return"Circle"}intersectsExtent(t){const e=this.getExtent();if((0,i.intersects)(t,e)){const e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||(t[1]<=e[1]&&t[3]>=e[1]||(0,i.forEachCorner)(t,this.intersectsCoordinate.bind(this)))}return!1}setCenter(t){const e=this.stride,r=this.flatCoordinates[e]-this.flatCoordinates[0],n=t.slice();n[e]=n[0]+r;for(let r=1;r<e;++r)n[e+r]=t[r];this.setFlatCoordinates(this.layout,n),this.changed()}setCenterAndRadius(t,e,r){this.setLayout(r,t,0),this.flatCoordinates||(this.flatCoordinates=[]);const n=this.flatCoordinates;let o=(0,s.deflateCoordinate)(n,0,t,this.stride);n[o++]=n[0]+e;for(let t=1,e=this.stride;t<e;++t)n[o++]=n[t];n.length=o,this.changed()}getCoordinates(){return null}setCoordinates(t,e){}setRadius(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()}rotate(t,e){const r=this.getCenter(),n=this.getStride();this.setCenter((0,a.rotate)(r,0,r.length,n,t,e,r)),this.changed()}translate(t,e){const r=this.getCenter(),n=this.getStride();this.setCenter((0,a.translate)(r,0,r.length,n,t,e,r)),this.changed()}}u.prototype.transform;var l=u}));