function t(t,e,s,n){Object.defineProperty(t,e,{get:s,set:n,enumerable:!0,configurable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},s={},n={},i=e.parcelRequirecc54;null==i&&((i=function(t){if(t in s)return s[t].exports;if(t in n){var e=n[t];delete n[t];var i={id:t,exports:{}};return s[t]=i,e.call(i.exports,i,i.exports),i.exports}var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(t,e){n[t]=e},e.parcelRequirecc54=i),i.register("23ytq",(function(e,s){t(e.exports,"ol_coordinate_dist2d",(()=>u)),t(e.exports,"ol_coordinate_equal",(()=>f)),t(e.exports,"ol_coordinate_getFeatureCenter",(()=>c)),t(e.exports,"ol_coordinate_splitH",(()=>p)),t(e.exports,"ol_coordinate_getIntersectionPoint",(()=>C));var n,r=i("hvEnP"),o=(i("fYB0A"),i("7TB1l")),a=(i("ljDIj"),i("dEQmT")),l=(i("j2K3b"),i("cgPpQ")),h=i("iTxNH"),d=i("jZquI"),u=(d=i("jZquI"),function(t,e){var s=t[0]-e[0],n=t[1]-e[1];return Math.sqrt(s*s+n*n)}),f=function(t,e){return t[0]==e[0]&&t[1]==e[1]},c=function(t){return g(t.getGeometry())},g=function(t){switch(t.getType()){case"Point":return t.getCoordinates();case"MultiPolygon":t=t.getPolygon(0);case"Polygon":return t.getInteriorPoint().getCoordinates();default:return t.getClosestPoint((0,d.getCenter)(t.getExtent()))}},p=function(t,e,s){for(var n,i,r=[],o=0;o<t.length-1;o++)t[o].length&&t[o+1].length&&(t[o][1]<=e&&t[o+1][1]>e||t[o][1]>=e&&t[o+1][1]<e)&&(n=(i=(e-t[o][1])/(t[o+1][1]-t[o][1]))*(t[o+1][0]-t[o][0])+t[o][0],r.push({contour:s,index:o,pt:[n,e],abs:i}));r.sort((function(t,e){return t.pt[0]-e.pt[0]}));for(var a=[],l=0;l<r.length-1;l+=2)a.push([r[l],r[l+1]]);return a},C=function(t,e){var s=t[1][0]-t[0][0],n=t[1][1]-t[0][1],i=e[1][0]-e[0][0],r=e[1][1]-e[0][1],o=s*r-n*i;if(0!=o){var a=(s*t[0][1]-s*e[0][1]-n*t[0][0]+n*e[0][0])/o;return[e[0][0]+a*i,e[0][1]+a*r]}return!1};!function(){function t(t,e){var s;for(let n=t.length-1;n>0;n--)(t[n][0]>e&&t[n-1][0]<e||t[n][0]<e&&t[n-1][0]>e)&&(s=[e,(e-t[n][0])/(t[n-1][0]-t[n][0])*(t[n-1][1]-t[n][1])+t[n][1]],t.splice(n,0,s))}function e(t,e){var s;for(let n=t.length-1;n>0;n--)(t[n][1]>e&&t[n-1][1]<e||t[n][1]<e&&t[n-1][1]>e)&&(s=[(e-t[n][1])/(t[n-1][1]-t[n][1])*(t[n-1][0]-t[n][0])+t[n][0],e],t.splice(n,0,s))}n=function(s,n){var i="Polygon"===n.getType();if(!i&&"MultiPolygon"!==n.getType())return null;var r=n.getCoordinates();return i&&(r=[r]),r.forEach((function(n){n.forEach((function(n){t(n,s[0]),t(n,s[2]),e(n,s[1]),e(n,s[3])}))})),r.forEach((function(t){t.forEach((function(t){t.forEach((function(t){t[0]<s[0]?t[0]=s[0]:t[0]>s[2]&&(t[0]=s[2]),t[1]<s[1]?t[1]=s[1]:t[1]>s[3]&&(t[1]=s[3])}))}))})),i?new(0,l.default)(r[0]):new(0,a.default)(r)}}();var y=function(t,e,s,n){var i=[];!1!==n&&i.push(t);var r=u(t,e);if(r){var o=Math.round(r/s);if(o>1)for(var a=(e[0]-t[0])/o,l=(e[1]-t[1])/o,h=1;h<o;h++)i.push([t[0]+a*h,t[1]+l*h])}return i.push(e),i};r.default.prototype.sampleAt=function(t){for(var e=this.getCoordinates(),s=[],n=1;n<e.length;n++)s=s.concat(y(e[n-1],e[n],t,1===n));return new(0,r.default)(s)},o.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),s=[];return e.forEach((function(e){for(var n=[],i=1;i<e.length;i++)n=n.concat(y(e[i-1],e[i],t,1===i));s.push(n)})),new(0,o.default)(s)},l.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),s=[];return e.forEach((function(e){for(var n=[],i=1;i<e.length;i++)n=n.concat(y(e[i-1],e[i],t,1===i));s.push(n)})),new(0,l.default)(s)},a.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),s=[];return e.forEach((function(e){var n=[];s.push(n),e.forEach((function(e){for(var s=[],i=1;i<e.length;i++)s=s.concat(y(e[i-1],e[i],t,1===i));n.push(s)}))})),new(0,a.default)(s)},h.default.prototype.intersection=function(t,e){if(t.sampleAt){var s=(0,d.buffer)(this.getCenter().concat(this.getCenter()),this.getRadius());t=(t=n(s,t)).simplify(e);var i=this.getCenter(),r=this.getRadius(),o=t.sampleAt(e).getCoordinates();switch(t.getType()){case"Polygon":o=[o];case"MultiPolygon":var h=!1,f=[];return o.forEach((function(t){var e=[];f.push(e),t.forEach((function(t){var s=[];e.push(s),t.forEach((function(t){var e=u(i,t);e>r?(h=!0,s.push([i[0]+r/e*(t[0]-i[0]),i[1]+r/e*(t[1]-i[1])])):s.push(t)}))}))})),h?"Polygon"===t.getType()?new(0,l.default)(f[0]):new(0,a.default)(f):t}}else console.warn("[ol/geom/Circle~intersection] Unsupported geometry type: "+t.getType());return t}})),i.register("7TB1l",(function(e,s){t(e.exports,"default",(()=>p));var n=i("hvEnP"),r=i("63y7W"),o=i("96blb"),a=i("jZquI"),l=i("ee3b9"),h=i("exEDy"),d=i("kBSVF"),u=i("iTdJV"),f=i("1fqgz"),c=i("4NB4B");class g extends r.default{constructor(t,e,s){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(t[0]))this.setCoordinates(t,e);else if(void 0!==e&&s)this.setFlatCoordinates(e,t),this.ends_=s;else{let e=this.getLayout();const s=t,n=[],i=[];for(let t=0,r=s.length;t<r;++t){const r=s[t];0===t&&(e=r.getLayout()),(0,d.extend)(n,r.getFlatCoordinates()),i.push(n.length)}this.setFlatCoordinates(e,n),this.ends_=i}}appendLineString(t){this.flatCoordinates?(0,d.extend)(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const t=new g(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t}closestPointXY(t,e,s,n){return n<(0,a.closestSquaredDistanceXY)(this.getExtent(),t,e)?n:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,o.arrayMaxSquaredDelta)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,o.assignClosestArrayPoint)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,s,n))}getCoordinateAtM(t,e,s){return"XYM"!=this.layout&&"XYZM"!=this.layout||0===this.flatCoordinates.length?null:(e=void 0!==e&&e,s=void 0!==s&&s,(0,f.lineStringsCoordinateAtM)(this.flatCoordinates,0,this.ends_,this.stride,t,e,s))}getCoordinates(){return(0,u.inflateCoordinatesArray)(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(t){return t<0||this.ends_.length<=t?null:new(0,n.default)(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)}getLineStrings(){const t=this.flatCoordinates,e=this.ends_,s=this.layout,i=[];let r=0;for(let o=0,a=e.length;o<a;++o){const a=e[o],l=new(0,n.default)(t.slice(r,a),s);i.push(l),r=a}return i}getFlatMidpoints(){const t=[],e=this.flatCoordinates;let s=0;const n=this.ends_,i=this.stride;for(let r=0,o=n.length;r<o;++r){const o=n[r],a=(0,f.interpolatePoint)(e,s,o,i,.5);(0,d.extend)(t,a),s=o}return t}getSimplifiedGeometryInternal(t){const e=[],s=[];return e.length=(0,h.douglasPeuckerArray)(this.flatCoordinates,0,this.ends_,this.stride,t,e,0,s),new g(e,"XY",s)}getType(){return"MultiLineString"}intersectsExtent(t){return(0,c.intersectsLineStringArray)(this.flatCoordinates,0,this.ends_,this.stride,t)}setCoordinates(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);const s=(0,l.deflateCoordinatesArray)(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===s.length?0:s[s.length-1],this.changed()}}var p=g})),i.register("iTxNH",(function(e,s){t(e.exports,"default",(()=>h));var n=i("63y7W"),r=i("jZquI"),o=i("ee3b9"),a=i("bsQCi");class l extends n.default{constructor(t,e,s){super(),void 0!==s&&void 0===e?this.setFlatCoordinates(s,t):(e=e||0,this.setCenterAndRadius(t,e,s))}clone(){const t=new l(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t}closestPointXY(t,e,s,n){const i=this.flatCoordinates,r=t-i[0],o=e-i[1],a=r*r+o*o;if(a<n){if(0===a)for(let t=0;t<this.stride;++t)s[t]=i[t];else{const t=this.getRadius()/Math.sqrt(a);s[0]=i[0]+t*r,s[1]=i[1]+t*o;for(let t=2;t<this.stride;++t)s[t]=i[t]}return s.length=this.stride,a}return n}containsXY(t,e){const s=this.flatCoordinates,n=t-s[0],i=e-s[1];return n*n+i*i<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(t){const e=this.flatCoordinates,s=e[this.stride]-e[0];return(0,r.createOrUpdate)(e[0]-s,e[1]-s,e[0]+s,e[1]+s,t)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e}getType(){return"Circle"}intersectsExtent(t){const e=this.getExtent();if((0,r.intersects)(t,e)){const e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||(t[1]<=e[1]&&t[3]>=e[1]||(0,r.forEachCorner)(t,this.intersectsCoordinate.bind(this)))}return!1}setCenter(t){const e=this.stride,s=this.flatCoordinates[e]-this.flatCoordinates[0],n=t.slice();n[e]=n[0]+s;for(let s=1;s<e;++s)n[e+s]=t[s];this.setFlatCoordinates(this.layout,n),this.changed()}setCenterAndRadius(t,e,s){this.setLayout(s,t,0),this.flatCoordinates||(this.flatCoordinates=[]);const n=this.flatCoordinates;let i=(0,o.deflateCoordinate)(n,0,t,this.stride);n[i++]=n[0]+e;for(let t=1,e=this.stride;t<e;++t)n[i++]=n[t];n.length=i,this.changed()}getCoordinates(){return null}setCoordinates(t,e){}setRadius(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()}rotate(t,e){const s=this.getCenter(),n=this.getStride();this.setCenter((0,a.rotate)(s,0,s.length,n,t,e,s)),this.changed()}translate(t,e){const s=this.getCenter(),n=this.getStride();this.setCenter((0,a.translate)(s,0,s.length,n,t,e,s)),this.changed()}}l.prototype.transform;var h=l}));