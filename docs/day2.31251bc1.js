function t(t,e,s,i){Object.defineProperty(t,e,{get:s,set:i,enumerable:!0,configurable:!0})}var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},s={},i={},n=e.parcelRequirecc54;null==n&&((n=function(t){if(t in s)return s[t].exports;if(t in i){var e=i[t];delete i[t];var n={id:t,exports:{}};return s[t]=n,e.call(n.exports,n,n.exports),n.exports}var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(t,e){i[t]=e},e.parcelRequirecc54=n),n.register("23ytq",(function(e,s){t(e.exports,"ol_coordinate_dist2d",(()=>u)),t(e.exports,"ol_coordinate_equal",(()=>f));var i,r=n("hvEnP"),o=(n("fYB0A"),n("7TB1l")),a=(n("ljDIj"),n("dEQmT")),l=(n("j2K3b"),n("cgPpQ")),h=n("iTxNH"),d=n("jZquI"),u=(d=n("jZquI"),function(t,e){var s=t[0]-e[0],i=t[1]-e[1];return Math.sqrt(s*s+i*i)}),f=function(t,e){return t[0]==e[0]&&t[1]==e[1]};!function(){function t(t,e){var s;for(let i=t.length-1;i>0;i--)(t[i][0]>e&&t[i-1][0]<e||t[i][0]<e&&t[i-1][0]>e)&&(s=[e,(e-t[i][0])/(t[i-1][0]-t[i][0])*(t[i-1][1]-t[i][1])+t[i][1]],t.splice(i,0,s))}function e(t,e){var s;for(let i=t.length-1;i>0;i--)(t[i][1]>e&&t[i-1][1]<e||t[i][1]<e&&t[i-1][1]>e)&&(s=[(e-t[i][1])/(t[i-1][1]-t[i][1])*(t[i-1][0]-t[i][0])+t[i][0],e],t.splice(i,0,s))}i=function(s,i){var n="Polygon"===i.getType();if(!n&&"MultiPolygon"!==i.getType())return null;var r=i.getCoordinates();return n&&(r=[r]),r.forEach((function(i){i.forEach((function(i){t(i,s[0]),t(i,s[2]),e(i,s[1]),e(i,s[3])}))})),r.forEach((function(t){t.forEach((function(t){t.forEach((function(t){t[0]<s[0]?t[0]=s[0]:t[0]>s[2]&&(t[0]=s[2]),t[1]<s[1]?t[1]=s[1]:t[1]>s[3]&&(t[1]=s[3])}))}))})),n?new(0,l.default)(r[0]):new(0,a.default)(r)}}();var c=function(t,e,s,i){var n=[];!1!==i&&n.push(t);var r=u(t,e);if(r){var o=Math.round(r/s);if(o>1)for(var a=(e[0]-t[0])/o,l=(e[1]-t[1])/o,h=1;h<o;h++)n.push([t[0]+a*h,t[1]+l*h])}return n.push(e),n};r.default.prototype.sampleAt=function(t){for(var e=this.getCoordinates(),s=[],i=1;i<e.length;i++)s=s.concat(c(e[i-1],e[i],t,1===i));return new(0,r.default)(s)},o.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),s=[];return e.forEach((function(e){for(var i=[],n=1;n<e.length;n++)i=i.concat(c(e[n-1],e[n],t,1===n));s.push(i)})),new(0,o.default)(s)},l.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),s=[];return e.forEach((function(e){for(var i=[],n=1;n<e.length;n++)i=i.concat(c(e[n-1],e[n],t,1===n));s.push(i)})),new(0,l.default)(s)},a.default.prototype.sampleAt=function(t){var e=this.getCoordinates(),s=[];return e.forEach((function(e){var i=[];s.push(i),e.forEach((function(e){for(var s=[],n=1;n<e.length;n++)s=s.concat(c(e[n-1],e[n],t,1===n));i.push(s)}))})),new(0,a.default)(s)},h.default.prototype.intersection=function(t,e){if(t.sampleAt){var s=(0,d.buffer)(this.getCenter().concat(this.getCenter()),this.getRadius());t=(t=i(s,t)).simplify(e);var n=this.getCenter(),r=this.getRadius(),o=t.sampleAt(e).getCoordinates();switch(t.getType()){case"Polygon":o=[o];case"MultiPolygon":var h=!1,f=[];return o.forEach((function(t){var e=[];f.push(e),t.forEach((function(t){var s=[];e.push(s),t.forEach((function(t){var e=u(n,t);e>r?(h=!0,s.push([n[0]+r/e*(t[0]-n[0]),n[1]+r/e*(t[1]-n[1])])):s.push(t)}))}))})),h?"Polygon"===t.getType()?new(0,l.default)(f[0]):new(0,a.default)(f):t}}else console.warn("[ol/geom/Circle~intersection] Unsupported geometry type: "+t.getType());return t}})),n.register("7TB1l",(function(e,s){t(e.exports,"default",(()=>p));var i=n("hvEnP"),r=n("63y7W"),o=n("96blb"),a=n("jZquI"),l=n("ee3b9"),h=n("exEDy"),d=n("kBSVF"),u=n("iTdJV"),f=n("1fqgz"),c=n("4NB4B");class g extends r.default{constructor(t,e,s){if(super(),this.ends_=[],this.maxDelta_=-1,this.maxDeltaRevision_=-1,Array.isArray(t[0]))this.setCoordinates(t,e);else if(void 0!==e&&s)this.setFlatCoordinates(e,t),this.ends_=s;else{let e=this.getLayout();const s=t,i=[],n=[];for(let t=0,r=s.length;t<r;++t){const r=s[t];0===t&&(e=r.getLayout()),(0,d.extend)(i,r.getFlatCoordinates()),n.push(i.length)}this.setFlatCoordinates(e,i),this.ends_=n}}appendLineString(t){this.flatCoordinates?(0,d.extend)(this.flatCoordinates,t.getFlatCoordinates().slice()):this.flatCoordinates=t.getFlatCoordinates().slice(),this.ends_.push(this.flatCoordinates.length),this.changed()}clone(){const t=new g(this.flatCoordinates.slice(),this.layout,this.ends_.slice());return t.applyProperties(this),t}closestPointXY(t,e,s,i){return i<(0,a.closestSquaredDistanceXY)(this.getExtent(),t,e)?i:(this.maxDeltaRevision_!=this.getRevision()&&(this.maxDelta_=Math.sqrt((0,o.arrayMaxSquaredDelta)(this.flatCoordinates,0,this.ends_,this.stride,0)),this.maxDeltaRevision_=this.getRevision()),(0,o.assignClosestArrayPoint)(this.flatCoordinates,0,this.ends_,this.stride,this.maxDelta_,!1,t,e,s,i))}getCoordinateAtM(t,e,s){return"XYM"!=this.layout&&"XYZM"!=this.layout||0===this.flatCoordinates.length?null:(e=void 0!==e&&e,s=void 0!==s&&s,(0,f.lineStringsCoordinateAtM)(this.flatCoordinates,0,this.ends_,this.stride,t,e,s))}getCoordinates(){return(0,u.inflateCoordinatesArray)(this.flatCoordinates,0,this.ends_,this.stride)}getEnds(){return this.ends_}getLineString(t){return t<0||this.ends_.length<=t?null:new(0,i.default)(this.flatCoordinates.slice(0===t?0:this.ends_[t-1],this.ends_[t]),this.layout)}getLineStrings(){const t=this.flatCoordinates,e=this.ends_,s=this.layout,n=[];let r=0;for(let o=0,a=e.length;o<a;++o){const a=e[o],l=new(0,i.default)(t.slice(r,a),s);n.push(l),r=a}return n}getFlatMidpoints(){const t=[],e=this.flatCoordinates;let s=0;const i=this.ends_,n=this.stride;for(let r=0,o=i.length;r<o;++r){const o=i[r],a=(0,f.interpolatePoint)(e,s,o,n,.5);(0,d.extend)(t,a),s=o}return t}getSimplifiedGeometryInternal(t){const e=[],s=[];return e.length=(0,h.douglasPeuckerArray)(this.flatCoordinates,0,this.ends_,this.stride,t,e,0,s),new g(e,"XY",s)}getType(){return"MultiLineString"}intersectsExtent(t){return(0,c.intersectsLineStringArray)(this.flatCoordinates,0,this.ends_,this.stride,t)}setCoordinates(t,e){this.setLayout(e,t,2),this.flatCoordinates||(this.flatCoordinates=[]);const s=(0,l.deflateCoordinatesArray)(this.flatCoordinates,0,t,this.stride,this.ends_);this.flatCoordinates.length=0===s.length?0:s[s.length-1],this.changed()}}var p=g})),n.register("iTxNH",(function(e,s){t(e.exports,"default",(()=>h));var i=n("63y7W"),r=n("jZquI"),o=n("ee3b9"),a=n("bsQCi");class l extends i.default{constructor(t,e,s){super(),void 0!==s&&void 0===e?this.setFlatCoordinates(s,t):(e=e||0,this.setCenterAndRadius(t,e,s))}clone(){const t=new l(this.flatCoordinates.slice(),void 0,this.layout);return t.applyProperties(this),t}closestPointXY(t,e,s,i){const n=this.flatCoordinates,r=t-n[0],o=e-n[1],a=r*r+o*o;if(a<i){if(0===a)for(let t=0;t<this.stride;++t)s[t]=n[t];else{const t=this.getRadius()/Math.sqrt(a);s[0]=n[0]+t*r,s[1]=n[1]+t*o;for(let t=2;t<this.stride;++t)s[t]=n[t]}return s.length=this.stride,a}return i}containsXY(t,e){const s=this.flatCoordinates,i=t-s[0],n=e-s[1];return i*i+n*n<=this.getRadiusSquared_()}getCenter(){return this.flatCoordinates.slice(0,this.stride)}computeExtent(t){const e=this.flatCoordinates,s=e[this.stride]-e[0];return(0,r.createOrUpdate)(e[0]-s,e[1]-s,e[0]+s,e[1]+s,t)}getRadius(){return Math.sqrt(this.getRadiusSquared_())}getRadiusSquared_(){const t=this.flatCoordinates[this.stride]-this.flatCoordinates[0],e=this.flatCoordinates[this.stride+1]-this.flatCoordinates[1];return t*t+e*e}getType(){return"Circle"}intersectsExtent(t){const e=this.getExtent();if((0,r.intersects)(t,e)){const e=this.getCenter();return t[0]<=e[0]&&t[2]>=e[0]||(t[1]<=e[1]&&t[3]>=e[1]||(0,r.forEachCorner)(t,this.intersectsCoordinate.bind(this)))}return!1}setCenter(t){const e=this.stride,s=this.flatCoordinates[e]-this.flatCoordinates[0],i=t.slice();i[e]=i[0]+s;for(let s=1;s<e;++s)i[e+s]=t[s];this.setFlatCoordinates(this.layout,i),this.changed()}setCenterAndRadius(t,e,s){this.setLayout(s,t,0),this.flatCoordinates||(this.flatCoordinates=[]);const i=this.flatCoordinates;let n=(0,o.deflateCoordinate)(i,0,t,this.stride);i[n++]=i[0]+e;for(let t=1,e=this.stride;t<e;++t)i[n++]=i[t];i.length=n,this.changed()}getCoordinates(){return null}setCoordinates(t,e){}setRadius(t){this.flatCoordinates[this.stride]=this.flatCoordinates[0]+t,this.changed()}rotate(t,e){const s=this.getCenter(),i=this.getStride();this.setCenter((0,a.rotate)(s,0,s.length,i,t,e,s)),this.changed()}translate(t,e){const s=this.getCenter(),i=this.getStride();this.setCenter((0,a.translate)(s,0,s.length,i,t,e,s)),this.changed()}}l.prototype.transform;var h=l}));